
name: CI
env:
  directory: ./project
on:
   # События, которые запускают jobs
    push:
      branches: [ "main" ]
    pull_request:
      branches: [ "main" ]

# jobs запускаются параллельно, если не указана последовательность
jobs:
    # Название job вы можете назвать как угодно
    my_build_job:
      # Операционная система в виртуальной машине, в которой запускаются процессы
      runs-on: ubuntu-latest
        # Шаги
      steps:
          # Actions от github: проверяет репозиторий, гит и т.д.
          - uses: actions/checkout@v4
            with:
              sparse-checkout: |
                src    

          # Пример однолинейного простого скрипта shell
          - name: check file
            run: ls -l

          # Пример многолинейного скрипта shell
          - name: view file
            run: | 
              cd src
              ls -l
              pwd
              echo ''
              cat file
          # Простая установка доступного пакета из интернета
          - name: install gcc
            run: sudo apt install gcc -y

          - name: build package
            run: |
              ls -l 
              dpkg-deb --build ./src/package    

          # Загрузка собранного пакета из этой джобы и передача его в следующую джобу
          - name: Upload artifact
            uses: actions/upload-artifact@v4
            with:
              name: package
              path: src/package.deb

          - name: isntall package
            run: sudo apt-get install ./src/package.deb

          - name: test package
            run: buildpackage

    my_test_job:
      # В случае успеха первой джобы запустится выполнение данной джобы
      needs: [my_build_job]
      runs-on: ubuntu-latest
      steps:
          - name: doing smth
            run: uptime
       
          # Загрузка пакета из предыдущей джобы
          - name: Download artifact
            uses: actions/download-artifact@v4
            with:
              name: package

          - name: a few jobs
            run: | 
                  ls -l
                  mkdir ${{env.directory}}
                  cd ${{env.directory}}
                  pwd
                  
          - name: isntall/test package
            run: | 
              sudo apt-get install ./package.deb
              echo " "
              buildpackage
 
